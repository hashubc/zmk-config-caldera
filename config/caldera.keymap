#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/macro.h> // 添加宏支持头文件

#define _BASE 0
#define _MAC_NAV 1
#define _SYM 2
#define _ADJ 3

/ {
    macros {
        macro_kill_line: macro_kill_line { 
            compatible = "zmk,behavior-macro";
            label = "MACRO_KILL_LINE";
            #binding-cells = <0>;
            bindings = <
                &macro_press &kp LSHFT
                &macro_tap &kp END
                &macro_release &kp LSHFT
                &macro_tap &kp DEL
            >;
        };
        macro_kill_to_start: macro_kill_to_start { 
            compatible = "zmk,behavior-macro";
            label = "MACRO_KILL_TO_START";
            #binding-cells = <0>;
            bindings = <
                &macro_press &kp LSHFT
                &macro_tap &kp HOME
                &macro_release &kp LSHFT
                &macro_tap &kp DEL
            >;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /* LAYER 0: _BASE (QWERTY) */
        default_layer { bindings = <
        &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5        &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSPC
        &kp TAB &kp Q &kp W &kp E &kp R &kp T               &kp Y &kp U &kp I &kp O &kp P &kp BSLH
        &kp ESC &kp A &kp S &kp D &kp F &kp G               &kp H &kp J &kp K &kp L &kp SEMI &kp RET
        &kp LSHFT &kp Z &kp X &kp C &kp V &kp B             &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp APOS
        &kp LCTRL &kp LGUI &kp LSHFT &mo _MAC_NAV &kp LALT &kp SPACE   &kp SPACE &mo _SYM &mo _MAC_NAV &kp RALT &to _SYM &kp RCTRL
        >; };

        /* LAYER 1: _MAC_NAV */
        mac_nav_layer { bindings = <
        &trans &trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans &trans
        &trans &trans &trans &kp END &trans &trans          &trans &macro_kill_to_start &trans &trans &kp UP &trans
        &kp HOME &trans &kp DEL &kp RIGHT &trans &trans      &trans &trans &macro_kill_line &trans &trans &trans
        &trans &trans &trans &trans &trans &kp LEFT          &kp DOWN &trans &trans &trans &trans &trans
        &trans &trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans &trans
        >; };

        /* LAYER 2: _SYM */
        sym_layer { bindings = <
        &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5           &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
        &trans &trans &kp UP &trans &trans &trans           &kp UNDER &kp PLUS &kp LBKT &kp RBKT &trans &kp F12
        &to _ADJ &kp LEFT &kp DOWN &kp RIGHT &trans &trans   &kp MINUS &kp EQUAL &kp LBRC &kp RBRC &trans &trans
        &trans &trans &trans &trans &trans &trans             &trans &trans &trans &trans &trans &trans
        &trans &trans &trans &trans &trans &to _BASE          &trans &trans &trans &trans &trans &to _BASE
        >; };

        /* LAYER 3: _ADJ */
        adj_layer { bindings = <
        &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans &trans &trans &trans &trans &bt BT_CLR
        &trans &trans &trans &trans &trans &trans                          &trans &trans &trans &trans &trans &trans
        &trans &trans &trans &trans &trans &trans                                &trans &trans &trans &trans &trans &trans
        &trans &trans &trans &trans &trans &trans                                &trans &trans &trans &trans &trans &trans
        &trans &trans &trans &trans &trans &to _BASE                             &trans &trans &trans &trans &trans &trans
        >; };
    };
};
